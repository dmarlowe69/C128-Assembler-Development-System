.PAGE 'PRG2BYTE'.OPT NOLIST;**********************************=$1C01        ;START OF BASIC;*********************************; SET BSTUB TO ONE TO ALLOW FOR; INSERTION OF BASIC STUB CODE;*********************************BSTUB = 1;*********************************;;         PRG2BYTE64;      PRG2BYTE.C64 V072882;     CONVERT PROGRAM FILE;  TO ASSEMBLER64 SOURCE FILE;          BYTE,WORD ;; (C) 1982 BY COMMODORE MACHINES;;  WRITTEN BY DENTON MARLOWE;********************************;; BASIC FORMAT PROGRAM;; 10 SYS(7183);;*********************************;.IF  BSTUB == 1.IFN BSTUB <;*********************************HH1C01 .WORD BASIC    ;LINE LINK POINTER       .BYTE $0A,$00  ;LINE NUMBER (10)       .BYTE $9E      ;SYS COMMAND TOKEN       .BYTE '(7183)' ;CALL TO $1C0F       .BYTE $00      ;END OF LINEBASIC  .BYTE $00,$00  ;END OF BASIC;*********************************>;.FI;********************************; C128 SPECIFIC EQUATES;********************************BASICW=$4D37 ;BASIC WARM STARTCHROUE=$C72D ;OUTPUT CHAR TO SCREENSCROLY=$D011 ;SCREEN CONTROL;********************************;*=$1C0F        ;PROGRAM128 ORGIN;*********************************; JUMP OVER ; PROCESSOR SPECIFIC UTILITIES;*********************************       JMP START;********************************; LIBRARY FUNCTIONS;********************************; TOP OF MEMORY C128 AND PLUS4;********************************MEMSIZ = $39 ;TOP OF FREE RAM+1MEMEND = $8000MEMSAV  .WORD $FFFF;********************************; SET TOP OF MEMORY C128;********************************SETMEM LDA MEMSIZ       STA MEMSAV       LDA MEMSIZ+1       STA MEMSAV+1;       LDA #<MEMEND       STA MEMSIZ       LDA #>MEMEND       STA MEMSIZ+1       RTS;********************************; EXIT TO BASIC;********************************EXIT   LDA MEMSAV       STA MEMSIZ       LDA MEMSAV+1       STA MEMSIZ+1;       LDA #$00  ;BANK 15       STA $FF00 ;BASIC ROM;       JMP BASICW ;EXIT TO BASIC;*********************************; SET FLAG TO ALLOW BASIC; AND KERNAL (ERROR) MESSAGES; $80 FOR BASIC; $40 FOR KERNAL;*********************************START  LDA #$40     ;ALLOW KERNAL MESSAGES       JSR SETMSG   ;KERNAL FLAG;********************************; SET MMU;********************************       LDA #$00  ;BANK 15       STA $FF00 ;;       LDA #$0E  ;NO BASIC ROM;       STA $FF00 ;              LDA #$FC  ;SLOW SPEED       STA $D030 ;       JSR CLALL ;;*********************************; MAIN BODY OF CODE;*********************************.FIL PRG2BYTE.ASM;*********************************.END